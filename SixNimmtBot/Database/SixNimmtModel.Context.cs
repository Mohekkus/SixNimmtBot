//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Microsoft.Win32;
namespace Database
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SixNimmtDb : DbContext
    {
        public SixNimmtDb()
            : base(RegistryKey.OpenBaseKey(RegistryHive.LocalMachine, RegistryView.Registry64).OpenSubKey("SOFTWARE\\SixNimmt").GetValue("DbConnectionString").ToString())
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<GamePlayer> GamePlayers { get; set; }
        public virtual DbSet<Group> Groups { get; set; }
        public virtual DbSet<Player> Players { get; set; }
        public virtual DbSet<Admin> Admins { get; set; }
        public virtual DbSet<NotifyGame> NotifyGames { get; set; }
        public virtual DbSet<Game> Games { get; set; }
    
        public virtual ObjectResult<Nullable<int>> GetNumOfWins(Nullable<int> playerId)
        {
            var playerIdParameter = playerId.HasValue ?
                new ObjectParameter("playerId", playerId) :
                new ObjectParameter("playerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetNumOfWins", playerIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetPlayerNumOfGames(Nullable<int> playerId)
        {
            var playerIdParameter = playerId.HasValue ?
                new ObjectParameter("playerId", playerId) :
                new ObjectParameter("playerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetPlayerNumOfGames", playerIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetPlayerNumOfBulls(Nullable<int> playerId)
        {
            var playerIdParameter = playerId.HasValue ?
                new ObjectParameter("playerId", playerId) :
                new ObjectParameter("playerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetPlayerNumOfBulls", playerIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> GetAverageNumOfBulls()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("GetAverageNumOfBulls");
        }
    
        public virtual ObjectResult<Nullable<int>> GetNumOfLoss(Nullable<int> playerId)
        {
            var playerIdParameter = playerId.HasValue ?
                new ObjectParameter("playerId", playerId) :
                new ObjectParameter("playerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetNumOfLoss", playerIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetTotalNumOfBulls()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetTotalNumOfBulls");
        }
    
        public virtual ObjectResult<Nullable<int>> GetTotalNumOfGames()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetTotalNumOfGames");
        }
    
        public virtual ObjectResult<Nullable<int>> GetTotalNumOfGroups()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetTotalNumOfGroups");
        }
    
        public virtual ObjectResult<Nullable<int>> GetTotalNumOfPlayers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetTotalNumOfPlayers");
        }
    }
}
